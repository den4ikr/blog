[{"C:\\Users\\D\\Documents\\ts-blog\\src\\index.tsx":"1","C:\\Users\\D\\Documents\\ts-blog\\src\\reportWebVitals.ts":"2","C:\\Users\\D\\Documents\\ts-blog\\src\\App.tsx":"3","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Header\\Header.tsx":"4","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Posts\\PostsContainer.tsx":"5","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Posts\\Posts.tsx":"6","C:\\Users\\D\\Documents\\ts-blog\\src\\redux\\redux-store.ts":"7","C:\\Users\\D\\Documents\\ts-blog\\src\\redux\\posts-reducer.ts":"8","C:\\Users\\D\\Documents\\ts-blog\\src\\api\\api.ts":"9","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Header\\HeaderStyles.js":"10","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Posts\\PostsStyle.js":"11","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\PostBlock\\PostBlockContainer.tsx":"12","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\PostBlock\\PostBlock.tsx":"13","C:\\Users\\D\\Documents\\ts-blog\\src\\redux\\block-reducer.ts":"14","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\PostBlock\\PostBlockStyle.js":"15","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Posts\\AddPost\\AddPost.tsx":"16","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Posts\\AddPost\\AddPostStyle.js":"17","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\PostBlock\\Comments\\Comment.tsx":"18","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\PostBlock\\AddComment\\AddComment.tsx":"19","C:\\Users\\D\\Documents\\ts-blog\\src\\redux\\app-reducer.ts":"20","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Preloader\\Preloader.tsx":"21","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Preloader\\PreloaderStyle.js":"22"},{"size":728,"mtime":1609413949077,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1607011761675,"results":"25","hashOfConfig":"24"},{"size":1197,"mtime":1609862580570,"results":"26","hashOfConfig":"24"},{"size":898,"mtime":1609415172308,"results":"27","hashOfConfig":"24"},{"size":823,"mtime":1609685606737,"results":"28","hashOfConfig":"24"},{"size":1243,"mtime":1609941444852,"results":"29","hashOfConfig":"24"},{"size":556,"mtime":1609861900723,"results":"30","hashOfConfig":"24"},{"size":1375,"mtime":1609941442542,"results":"31","hashOfConfig":"24"},{"size":680,"mtime":1609854688052,"results":"32","hashOfConfig":"24"},{"size":423,"mtime":1609413913765,"results":"33","hashOfConfig":"24"},{"size":686,"mtime":1609590850657,"results":"34","hashOfConfig":"24"},{"size":1151,"mtime":1609854443972,"results":"35","hashOfConfig":"24"},{"size":2268,"mtime":1609857613398,"results":"36","hashOfConfig":"24"},{"size":1528,"mtime":1609856790648,"results":"37","hashOfConfig":"24"},{"size":1155,"mtime":1609856753655,"results":"38","hashOfConfig":"24"},{"size":1724,"mtime":1609690300728,"results":"39","hashOfConfig":"24"},{"size":280,"mtime":1609689740602,"results":"40","hashOfConfig":"24"},{"size":699,"mtime":1609857510110,"results":"41","hashOfConfig":"24"},{"size":1620,"mtime":1609857595724,"results":"42","hashOfConfig":"24"},{"size":748,"mtime":1609863621114,"results":"43","hashOfConfig":"24"},{"size":331,"mtime":1609862670004,"results":"44","hashOfConfig":"24"},{"size":255,"mtime":1609863618664,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"67e6lk",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\D\\Documents\\ts-blog\\src\\index.tsx",[],["98","99"],"C:\\Users\\D\\Documents\\ts-blog\\src\\reportWebVitals.ts",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\App.tsx",["100"],"import { Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport PostBlockContainer from './components/PostBlock/PostBlockContainer';\nimport PostsContainer from './components/Posts/PostsContainer';\nimport { AppStateType } from './redux/redux-store';\nimport { initiliseApp } from \"./redux/app-reducer\";\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Preloader from './components/Preloader/Preloader';\n\ntype PropsType = {\n  initilised: boolean,\n  initiliseApp: () => void,\n}\n\nconst App: React.FunctionComponent <PropsType> = (props) => {\n\n  useEffect ( () => {\n    props.initiliseApp ()\n  }, [] )\n\n  if (!props.initilised) {\n    return (\n      <Preloader />\n    )\n  }\n\n  return (\n    <div>\n      <Header />\n      <div className = \"container\" >\n        <Route exact path = \"/\" render = { () => <PostsContainer /> } />\n        <Route exact path = \"/postblock/:postId?\" render = { () => <PostBlockContainer /> } />\n      </div>\n    </div>\n  );\n}\n\nlet mapStateToProps = (state: AppStateType) => {\n  return {\n    initilised: state.app.initilised,\n  }\n}\n\nexport default connect (mapStateToProps, {initiliseApp})(App);\n","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Posts\\PostsContainer.tsx",["101"],"import { useEffect } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { AppStateType } from \"../../redux/redux-store\"\r\nimport { PostType } from \"../../types/types\"\r\nimport Posts from \"./Posts\"\r\nimport { getData, addPost } from \"../../redux/posts-reducer\";\r\n\r\ntype PropsType = {\r\n    getData: () => void,\r\n    addPost: (title: string, body: string) => void,\r\n    data: Array <PostType>\r\n}\r\n\r\nconst PostsContainer: React.FunctionComponent <PropsType> = (props) => {\r\n\r\n    useEffect ( () => {\r\n        props.getData ();\r\n    }, [] )\r\n\r\n    return (\r\n        <Posts data = {props.data} addPost = {props.addPost} />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        data: state.posts.data,\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, {getData, addPost} )(PostsContainer);","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Posts\\Posts.tsx",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\redux\\redux-store.ts",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\redux\\posts-reducer.ts",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\api\\api.ts",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Header\\HeaderStyles.js",[],["102","103"],"C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Posts\\PostsStyle.js",[],["104","105"],"C:\\Users\\D\\Documents\\ts-blog\\src\\components\\PostBlock\\PostBlockContainer.tsx",["106"],"import PostBlock from \"./PostBlock\";\r\nimport { useEffect } from \"react\";\r\nimport { getBlock, deleteBlock, addComment } from \"../../redux/block-reducer\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport { connect } from \"react-redux\";\r\nimport { GetPostBlockType } from \"../../types/types\";\r\nimport { withRouter } from \"react-router\";\r\n\r\ntype PropsType = {\r\n    block: GetPostBlockType,\r\n    getBlock: (postId: number) => void,\r\n    deleteBlock: (postId: number) => void,\r\n    addComment: (postId: number, body: string) => void,\r\n}\r\n\r\nconst PostBlockContainer: React.FunctionComponent <PropsType> = (props) => {\r\n    \r\n    useEffect ( () => {\r\n        //@ts-ignore\r\n        const postId = props.match.params.postId\r\n\r\n        props.getBlock (postId);\r\n    }, [] )\r\n\r\n    return (\r\n        <PostBlock { ...props } />\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        block: state.block.block,\r\n    }\r\n}\r\n\r\n//@ts-ignore\r\nconst WithUrlDataContainerComponent = withRouter (PostBlockContainer);\r\n\r\nexport default connect (mapStateToProps, {getBlock, deleteBlock, addComment})(WithUrlDataContainerComponent);","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\PostBlock\\PostBlock.tsx",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\redux\\block-reducer.ts",["107"],"import { AppStateType } from './redux-store';\r\nimport { API } from '../api/api';\r\nimport { GetPostBlockType } from '../types/types';\r\nimport { ThunkAction } from \"redux-thunk\";\r\n\r\nconst SET_BLOCK = \"SET_BLOCK\";\r\n\r\nconst initialState = {\r\n    block: {} as GetPostBlockType,\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst BlockReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_BLOCK:\r\n            return { ...state, block: action.block }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionsTypes = SetBlockActionType\r\n\r\ntype ThunkType = ThunkAction <Promise <void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const setBlock = (block: GetPostBlockType): SetBlockActionType => ( { type: SET_BLOCK, block } as const );\r\ntype SetBlockActionType = {\r\n    type: typeof SET_BLOCK,\r\n    block: GetPostBlockType,\r\n}\r\n\r\nexport const getBlock = (postId: number) => async (dispatch: any) => {\r\n    const response = await API.getPostBlock (postId)\r\n    dispatch (setBlock (response.data))\r\n}\r\n\r\nexport const deleteBlock = (postId: number): ThunkType => async (dispatch) => {\r\n    const response = await API.deletePost (postId);\r\n}\r\n\r\nexport const addComment = (postId: number, body: string): ThunkType => async (dispatch) => {\r\n    await API.createComent (postId, body);\r\n    const response = await API.getPostBlock (postId);\r\n    if (response) {\r\n        dispatch (setBlock (response.data));\r\n    }\r\n}\r\n\r\nexport default BlockReducer;","C:\\Users\\D\\Documents\\ts-blog\\src\\components\\PostBlock\\PostBlockStyle.js",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Posts\\AddPost\\AddPost.tsx",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Posts\\AddPost\\AddPostStyle.js",[],["108","109"],"C:\\Users\\D\\Documents\\ts-blog\\src\\components\\PostBlock\\Comments\\Comment.tsx",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\components\\PostBlock\\AddComment\\AddComment.tsx",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\redux\\app-reducer.ts",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Preloader\\Preloader.tsx",[],"C:\\Users\\D\\Documents\\ts-blog\\src\\components\\Preloader\\PreloaderStyle.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":21,"column":6,"nodeType":"116","endLine":21,"endColumn":8,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"115","line":18,"column":8,"nodeType":"116","endLine":18,"endColumn":10,"suggestions":"118"},{"ruleId":"110","replacedBy":"119"},{"ruleId":"112","replacedBy":"120"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":23,"column":8,"nodeType":"116","endLine":23,"endColumn":10,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":39,"column":11,"nodeType":"124","messageId":"125","endLine":39,"endColumn":19},{"ruleId":"110","replacedBy":"126"},{"ruleId":"112","replacedBy":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["130"],["131"],["128"],["129"],["132"],"@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar",["128"],["129"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"133","fix":"135"},{"desc":"133","fix":"136"},"Update the dependencies array to be: [props]",{"range":"137","text":"138"},{"range":"139","text":"138"},{"range":"140","text":"138"},[677,679],"[props]",[537,539],[773,775]]